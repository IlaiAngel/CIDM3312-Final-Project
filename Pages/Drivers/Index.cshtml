@page
@model FinalProject.Pages.Drivers.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Dispatch Admin</h1>

<p>
    <a asp-page="Create">Add New Driver</a>
</p>
<div class="row">
    <form class="d-flex" role="search" asp-page="./Index" method="get">
        <div class="col-3">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input class="form-control me-2" type="search" name="CurrentSearch" value="@Model.CurrentSearch" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </div>
        </div>
    </form>
</div>
<table class="table">
    <thead>
        <tr>
<th>
    @{
        //Alternate sort order
        var firstSort = "first_asc";
        if (Model.CurrentSort == "first_asc")
        {
            firstSort = "first_desc";
        }
    }
    <a asp-page="./Index" asp-route-CurrentSort="@firstSort" asp-route-PageNum="@Model.PageNum">@Html.DisplayNameFor(model => model.Driver[0].FirstName)</a>
</th>
            <th>
                @Html.DisplayNameFor(model => model.Driver[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Driver[0].TruckDrivers)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Driver) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
@*  

 *@
@foreach (var course in item.TruckDrivers!)
{
    @course.Truck.Description <br />
}
@if (item.TruckDrivers.Count == 0)
{
    @:Not Assigned Truck
}  
</td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.DriverID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.DriverID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.DriverID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<hr />
@{
    // If we are on page 1, prevDisabled will be set to the "disabled" class
    // otherwise, it will be empty. So our previous button will be enabled or disabled based on this logic
    var prevDisabled = "";
    var nextDisabled = "";
    if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    }
    if (Model.PageNum >= Model.TotalPages)
    {
        nextDisabled = "disabled";
    }
}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-CurrentSort="@(Model.CurrentSort)" asp-route-PageNum="@(Model.PageNum - 1)">Previous</a></li>
        <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-CurrentSort="@(Model.CurrentSort)" asp-route-PageNum="@(Model.PageNum + 1)">Next</a></li>
    </ul>
</nav>
